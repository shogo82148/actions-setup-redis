name: "Test"
on:
  pull_request: {}
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-20.04
          - macos-13
          - macos-12
          - macos-11
        redis:
          # The latest version that supports OpenSSL 1.1.1
          - "6.2"

          # Ths latest version
          - "7.2"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: npm

      - run: npm ci
      - id: test
        run: npm test

      - run: npm run build
      - id: setup
        name: use the action
        uses: ./
        with:
          redis-version: ${{ matrix.redis }}

      - name: connect via tcp port
        run: redis-cli -h 127.0.0.1 -p "${{ steps.setup.outputs.redis-port }}" ping
      - name: connect via unix domain socket
        run: redis-cli -s "${{ steps.setup.outputs.redis-unix-socket }}" ping

  test-tls:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-20.04
          - macos-12
          - macos-11
        redis:
          - "6.2"
          - "7.0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: npm

      - run: npm ci
      - run: npm run build

      # reproduce https://github.com/shogo82148/actions-setup-redis/issues/693
      - id: tmp
        run: |
          echo TEST_RUNNER_TOOL_CACHE="$(mktemp -d)" >> "$GITHUB_ENV"

      - id: setup
        name: use the action
        uses: ./
        with:
          redis-version: ${{ matrix.redis }}
          redis-port: "0"
          redis-tls-port: "6379"

      - name: connect via tls
        run: |
          redis-cli -h 127.0.0.1 -p "${{ steps.setup.outputs.redis-tls-port }}" \
            --tls \
            --cert "${{ steps.setup.outputs.redis-tls-dir }}/redis.crt" \
            --key "${{ steps.setup.outputs.redis-tls-dir }}/redis.key" \
            --cacert "${{ steps.setup.outputs.redis-tls-dir }}/ca.crt" \
            ping

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: npm

      - run: npm ci
      - run: npm run format-check
